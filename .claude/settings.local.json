{
  "permissions": {
    "allow": [
      "Bash(powershell \"Add-Type -Assembly System.IO.Compression.FileSystem; [System.IO.Compression.ZipFile]::OpenRead(''wordpress-plugin\\dwp-gamification.zip'').Entries | Select-Object -First 10 FullName\")",
      "Bash(cmd /c dir /B /S C:UsersziadfDocumentsProjectsUNDPwordpress-plugindwp-gamification)",
      "Bash(powershell \"Compress-Archive -Path dwp-gamification -DestinationPath dwp-gamification.zip -Force\")",
      "Bash(powershell \"(Get-Content ''wordpress-plugin\\dwp-gamification\\includes\\class-api-endpoints.php'').Count\")",
      "Bash(powershell \"(Get-Content ''wordpress-plugin\\dwp-gamification\\includes\\class-mission-cpt.php'').Count\")",
      "Bash(powershell \"(Get-Content ''lib\\Missions\\create_mission.dart'').Count\")",
      "Read(//c/Users/ziadf/Documents/Projects/UNDP/**)",
      "Bash(dir \"C:\\Users\\ziadf\\Documents\\Projects\\UNDP\" /B)",
      "Bash(flutter pub get:*)",
      "Bash(test:*)",
      "Read(//c/Users/ziadf/**)",
      "Read(//c//**)",
      "Bash(\"C:\\development\\flutter\\bin\\flutter.bat\" pub get)",
      "Bash(\"C:\\development\\flutter\\bin\\flutter.bat\" build apk --debug)",
      "Bash(\"C:\\development\\flutter\\bin\\flutter.bat\" clean)",
      "Bash(\"C:\\development\\flutter\\bin\\flutter.bat\" analyze)",
      "Bash(\"C:\\development\\flutter\\bin\\flutter.bat\" analyze --no-pub)",
      "Bash(\"C:\\development\\flutter\\bin\\flutter.bat\" analyze lib/Map/map.dart --no-pub)",
      "Bash(\"C:\\development\\flutter\\bin\\flutter.bat\" analyze lib/Missions/ --no-pub)",
      "Bash(\"C:\\development\\flutter\\bin\\flutter.bat\" doctor)",
      "Bash(\"C:\\development\\flutter\\bin\\flutter.bat\" devices)",
      "Bash(\"C:\\development\\flutter\\bin\\flutter.bat\" run -d emulator-5554)",
      "Bash(if exist .gradle rmdir /s /q .gradle)",
      "Bash(if exist build rmdir /s /q build)",
      "Bash(if exist appbuild rmdir /s /q appbuild)",
      "Bash(xmllint:*)",
      "Bash(cat:*)",
      "Bash(git fetch:*)",
      "Bash(git log:*)",
      "Bash(git merge:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git pull:*)"
    ],
    "deny": [],
    "ask": []
  }
}
